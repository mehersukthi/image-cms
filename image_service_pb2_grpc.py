# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import image_service_pb2 as image__service__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in image_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ImageServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListImages = channel.unary_unary(
                '/imagecms.ImageService/ListImages',
                request_serializer=image__service__pb2.ListImagesRequest.SerializeToString,
                response_deserializer=image__service__pb2.ListImagesResponse.FromString,
                _registered_method=True)
        self.GetImage = channel.unary_unary(
                '/imagecms.ImageService/GetImage',
                request_serializer=image__service__pb2.GetImageRequest.SerializeToString,
                response_deserializer=image__service__pb2.ImageResponse.FromString,
                _registered_method=True)
        self.CreateImage = channel.unary_unary(
                '/imagecms.ImageService/CreateImage',
                request_serializer=image__service__pb2.CreateImageRequest.SerializeToString,
                response_deserializer=image__service__pb2.ImageResponse.FromString,
                _registered_method=True)
        self.UpdateImage = channel.unary_unary(
                '/imagecms.ImageService/UpdateImage',
                request_serializer=image__service__pb2.UpdateImageRequest.SerializeToString,
                response_deserializer=image__service__pb2.ImageResponse.FromString,
                _registered_method=True)
        self.DeleteImage = channel.unary_unary(
                '/imagecms.ImageService/DeleteImage',
                request_serializer=image__service__pb2.DeleteImageRequest.SerializeToString,
                response_deserializer=image__service__pb2.DeleteImageResponse.FromString,
                _registered_method=True)
        self.ExportImages = channel.unary_unary(
                '/imagecms.ImageService/ExportImages',
                request_serializer=image__service__pb2.ExportImagesRequest.SerializeToString,
                response_deserializer=image__service__pb2.ExportImagesResponse.FromString,
                _registered_method=True)


class ImageServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListImages(self, request, context):
        """List images with optional filters
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImage(self, request, context):
        """Get image by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateImage(self, request, context):
        """Create a new image
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateImage(self, request, context):
        """Update an existing image
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteImage(self, request, context):
        """Delete an image
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportImages(self, request, context):
        """Export images with optional filters
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ImageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListImages': grpc.unary_unary_rpc_method_handler(
                    servicer.ListImages,
                    request_deserializer=image__service__pb2.ListImagesRequest.FromString,
                    response_serializer=image__service__pb2.ListImagesResponse.SerializeToString,
            ),
            'GetImage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImage,
                    request_deserializer=image__service__pb2.GetImageRequest.FromString,
                    response_serializer=image__service__pb2.ImageResponse.SerializeToString,
            ),
            'CreateImage': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateImage,
                    request_deserializer=image__service__pb2.CreateImageRequest.FromString,
                    response_serializer=image__service__pb2.ImageResponse.SerializeToString,
            ),
            'UpdateImage': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateImage,
                    request_deserializer=image__service__pb2.UpdateImageRequest.FromString,
                    response_serializer=image__service__pb2.ImageResponse.SerializeToString,
            ),
            'DeleteImage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteImage,
                    request_deserializer=image__service__pb2.DeleteImageRequest.FromString,
                    response_serializer=image__service__pb2.DeleteImageResponse.SerializeToString,
            ),
            'ExportImages': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportImages,
                    request_deserializer=image__service__pb2.ExportImagesRequest.FromString,
                    response_serializer=image__service__pb2.ExportImagesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'imagecms.ImageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('imagecms.ImageService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ImageService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/imagecms.ImageService/ListImages',
            image__service__pb2.ListImagesRequest.SerializeToString,
            image__service__pb2.ListImagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/imagecms.ImageService/GetImage',
            image__service__pb2.GetImageRequest.SerializeToString,
            image__service__pb2.ImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/imagecms.ImageService/CreateImage',
            image__service__pb2.CreateImageRequest.SerializeToString,
            image__service__pb2.ImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/imagecms.ImageService/UpdateImage',
            image__service__pb2.UpdateImageRequest.SerializeToString,
            image__service__pb2.ImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/imagecms.ImageService/DeleteImage',
            image__service__pb2.DeleteImageRequest.SerializeToString,
            image__service__pb2.DeleteImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExportImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/imagecms.ImageService/ExportImages',
            image__service__pb2.ExportImagesRequest.SerializeToString,
            image__service__pb2.ExportImagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
